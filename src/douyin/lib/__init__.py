# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: protobuf.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "Against",
    "Border",
    "CategoryInfo",
    "ChatMessage",
    "CommentTypeTag",
    "Common",
    "CommonTextMessage",
    "ControlMessage",
    "DisplayControlInfo",
    "DoubleLikeDetail",
    "EffectConfig",
    "EmojiChatMessage",
    "EpisodeChatMessage",
    "ExtList",
    "FansClub",
    "FansClubData",
    "FansclubMessage",
    "FollowInfo",
    "GiftImPriority",
    "GiftMessage",
    "GiftStruct",
    "GradeBuffInfo",
    "GradeIcon",
    "HeadersList",
    "Image",
    "ImageContent",
    "Kk",
    "LandscapeAreaCommon",
    "LikeMessage",
    "LiveShoppingMessage",
    "MatchAgainstScoreMessage",
    "MemberMessage",
    "Message",
    "NinePatchSetting",
    "PatternRef",
    "PayGrade",
    "PicoDisplayInfo",
    "PreMessage",
    "ProductChangeMessage",
    "ProductInfo",
    "PublicAreaCommon",
    "PushFrame",
    "Response",
    "RoomMessage",
    "RoomMsgTypeEnum",
    "RoomRankMessage",
    "RoomRankMessageRoomRank",
    "RoomStatsMessage",
    "RoomStreamAdaptationMessage",
    "RoomUserSeqMessage",
    "RoomUserSeqMessageContributor",
    "Rsp",
    "RspF",
    "SendMessageBody",
    "SocialMessage",
    "Text",
    "TextEffect",
    "TextEffectDetail",
    "TextFormat",
    "TextPiece",
    "TextPieceGift",
    "TextPieceHeart",
    "TextPieceImage",
    "TextPiecePatternRef",
    "TextPieceUser",
    "UpdateFanTicketMessage",
    "User",
    "UserBadge",
)

from dataclasses import dataclass

import betterproto2

from .message_pool import default_message_pool

_COMPILER_VERSION = "0.9.0"
betterproto2.check_compiler_version(_COMPILER_VERSION)


class CommentTypeTag(betterproto2.Enum):
    COMMENTTYPETAGUNKNOWN = 0

    COMMENTTYPETAGSTAR = 1


class RoomMsgTypeEnum(betterproto2.Enum):
    """
    from https://github.com/scx567888/live-room-watcher/blob/master/src/main/proto/douyin_hack/webcast/im/RoomMsgTypeEnum.proto
    """

    DEFAULTROOMMSG = 0

    ECOMLIVEREPLAYSAVEROOMMSG = 1

    CONSUMERRELATIONROOMMSG = 2

    JUMANJIDATAAUTHNOTIFYMSG = 3

    VSWELCOMEMSG = 4

    MINORREFUNDMSG = 5

    PAIDLIVEROOMNOTIFYANCHORMSG = 6

    HOSTTEAMSYSTEMMSG = 7


@dataclass(eq=False, repr=False)
class Against(betterproto2.Message):
    left_name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    left_logo: "Image | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    left_goal: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    right_name: "str" = betterproto2.field(6, betterproto2.TYPE_STRING)
    """
     LeftPlayersList leftPlayersList = 4;
     LeftGoalStageDetail leftGoalStageDetail = 5;
    """

    right_logo: "Image | None" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, optional=True
    )

    right_goal: "str" = betterproto2.field(8, betterproto2.TYPE_STRING)

    timestamp: "int" = betterproto2.field(11, betterproto2.TYPE_UINT64)
    """
     RightPlayersList rightPlayersList  = 9;
     RightGoalStageDetail rightGoalStageDetail = 10;
    """

    version: "int" = betterproto2.field(12, betterproto2.TYPE_UINT64)

    left_team_id: "int" = betterproto2.field(13, betterproto2.TYPE_UINT64)

    right_team_id: "int" = betterproto2.field(14, betterproto2.TYPE_UINT64)

    diff_sei_2abs_second: "int" = betterproto2.field(15, betterproto2.TYPE_UINT64)

    final_goal_stage: "int" = betterproto2.field(16, betterproto2.TYPE_UINT32)

    current_goal_stage: "int" = betterproto2.field(17, betterproto2.TYPE_UINT32)

    left_score_addition: "int" = betterproto2.field(18, betterproto2.TYPE_UINT32)

    right_score_addition: "int" = betterproto2.field(19, betterproto2.TYPE_UINT32)

    left_goal_int: "int" = betterproto2.field(20, betterproto2.TYPE_UINT64)

    right_goal_int: "int" = betterproto2.field(21, betterproto2.TYPE_UINT64)


default_message_pool.register_message("douyin", "Against", Against)


@dataclass(eq=False, repr=False)
class Border(betterproto2.Message):
    pass


default_message_pool.register_message("douyin", "Border", Border)


@dataclass(eq=False, repr=False)
class CategoryInfo(betterproto2.Message):
    id: "int" = betterproto2.field(1, betterproto2.TYPE_INT32)

    name: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    promotion_ids_list: "list[int]" = betterproto2.field(
        3, betterproto2.TYPE_INT64, repeated=True
    )

    type: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    unique_index: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "CategoryInfo", CategoryInfo)


@dataclass(eq=False, repr=False)
class ChatMessage(betterproto2.Message):
    """
    聊天
    """

    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    user: "User | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    content: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    visible_to_sender: "bool" = betterproto2.field(4, betterproto2.TYPE_BOOL)

    background_image: "Image | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True
    )

    full_screen_text_color: "str" = betterproto2.field(6, betterproto2.TYPE_STRING)

    background_image_v_2: "Image | None" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, optional=True
    )

    public_area_common: "PublicAreaCommon | None" = betterproto2.field(
        9, betterproto2.TYPE_MESSAGE, optional=True
    )

    gift_image: "Image | None" = betterproto2.field(
        10, betterproto2.TYPE_MESSAGE, optional=True
    )

    agree_msg_id: "int" = betterproto2.field(11, betterproto2.TYPE_UINT64)

    priority_level: "int" = betterproto2.field(12, betterproto2.TYPE_UINT32)

    landscape_area_common: "LandscapeAreaCommon | None" = betterproto2.field(
        13, betterproto2.TYPE_MESSAGE, optional=True
    )

    event_time: "int" = betterproto2.field(15, betterproto2.TYPE_UINT64)

    send_review: "bool" = betterproto2.field(16, betterproto2.TYPE_BOOL)

    from_intercom: "bool" = betterproto2.field(17, betterproto2.TYPE_BOOL)

    intercom_hide_user_card: "bool" = betterproto2.field(18, betterproto2.TYPE_BOOL)

    chat_by: "str" = betterproto2.field(20, betterproto2.TYPE_STRING)
    """
     repeated chatTagsList = 19;
    """

    individual_chat_priority: "int" = betterproto2.field(21, betterproto2.TYPE_UINT32)

    rtf_content: "Text | None" = betterproto2.field(
        22, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("douyin", "ChatMessage", ChatMessage)


@dataclass(eq=False, repr=False)
class Common(betterproto2.Message):
    method: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    msg_id: "int" = betterproto2.field(2, betterproto2.TYPE_UINT64)

    room_id: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    create_time: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    monitor: "int" = betterproto2.field(5, betterproto2.TYPE_UINT32)

    is_show_msg: "bool" = betterproto2.field(6, betterproto2.TYPE_BOOL)

    describe: "str" = betterproto2.field(7, betterproto2.TYPE_STRING)

    fold_type: "int" = betterproto2.field(9, betterproto2.TYPE_UINT64)
    """
     DisplayText displayText = 8;
    """

    anchor_fold_type: "int" = betterproto2.field(10, betterproto2.TYPE_UINT64)

    priority_score: "int" = betterproto2.field(11, betterproto2.TYPE_UINT64)

    log_id: "str" = betterproto2.field(12, betterproto2.TYPE_STRING)

    msg_process_filter_k: "str" = betterproto2.field(13, betterproto2.TYPE_STRING)

    msg_process_filter_v: "str" = betterproto2.field(14, betterproto2.TYPE_STRING)

    user: "User | None" = betterproto2.field(
        15, betterproto2.TYPE_MESSAGE, optional=True
    )

    anchor_fold_type_v_2: "int" = betterproto2.field(17, betterproto2.TYPE_UINT64)
    """
     Room room = 16;
    """

    process_at_sei_time_ms: "int" = betterproto2.field(18, betterproto2.TYPE_UINT64)

    random_dispatch_ms: "int" = betterproto2.field(19, betterproto2.TYPE_UINT64)

    is_dispatch: "bool" = betterproto2.field(20, betterproto2.TYPE_BOOL)

    channel_id: "int" = betterproto2.field(21, betterproto2.TYPE_UINT64)

    diff_sei_2abs_second: "int" = betterproto2.field(22, betterproto2.TYPE_UINT64)

    anchor_fold_duration: "int" = betterproto2.field(23, betterproto2.TYPE_UINT64)


default_message_pool.register_message("douyin", "Common", Common)


@dataclass(eq=False, repr=False)
class CommonTextMessage(betterproto2.Message):
    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    user: "User | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    scene: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "CommonTextMessage", CommonTextMessage)


@dataclass(eq=False, repr=False)
class ControlMessage(betterproto2.Message):
    """
    from https://github.com/HaoDong108/DouyinBarrageGrab/blob/main/BarrageGrab/proto/message.proto
    status = 3 下播
    """

    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    status: "int" = betterproto2.field(2, betterproto2.TYPE_INT32)


default_message_pool.register_message("douyin", "ControlMessage", ControlMessage)


@dataclass(eq=False, repr=False)
class DisplayControlInfo(betterproto2.Message):
    show_text: "bool" = betterproto2.field(1, betterproto2.TYPE_BOOL)

    show_icons: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)


default_message_pool.register_message(
    "douyin", "DisplayControlInfo", DisplayControlInfo
)


@dataclass(eq=False, repr=False)
class DoubleLikeDetail(betterproto2.Message):
    double_flag: "bool" = betterproto2.field(1, betterproto2.TYPE_BOOL)

    seq_id: "int" = betterproto2.field(2, betterproto2.TYPE_UINT32)

    renewals_num: "int" = betterproto2.field(3, betterproto2.TYPE_UINT32)

    triggers_num: "int" = betterproto2.field(4, betterproto2.TYPE_UINT32)


default_message_pool.register_message("douyin", "DoubleLikeDetail", DoubleLikeDetail)


@dataclass(eq=False, repr=False)
class EffectConfig(betterproto2.Message):
    type: "int" = betterproto2.field(1, betterproto2.TYPE_UINT64)

    icon: "Image | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    avatar_pos: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    text: "Text | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )

    text_icon: "Image | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True
    )

    stay_time: "int" = betterproto2.field(6, betterproto2.TYPE_UINT32)

    anim_asset_id: "int" = betterproto2.field(7, betterproto2.TYPE_UINT64)

    badge: "Image | None" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, optional=True
    )

    flex_setting_array_list: "list[int]" = betterproto2.field(
        9, betterproto2.TYPE_UINT64, repeated=True
    )

    text_icon_overlay: "Image | None" = betterproto2.field(
        10, betterproto2.TYPE_MESSAGE, optional=True
    )

    animated_badge: "Image | None" = betterproto2.field(
        11, betterproto2.TYPE_MESSAGE, optional=True
    )

    has_sweep_light: "bool" = betterproto2.field(12, betterproto2.TYPE_BOOL)

    text_flex_setting_array_list: "list[int]" = betterproto2.field(
        13, betterproto2.TYPE_UINT64, repeated=True
    )

    center_anim_asset_id: "int" = betterproto2.field(14, betterproto2.TYPE_UINT64)

    dynamic_image: "Image | None" = betterproto2.field(
        15, betterproto2.TYPE_MESSAGE, optional=True
    )

    extra_map: "dict[str, str]" = betterproto2.field(
        16,
        betterproto2.TYPE_MAP,
        map_meta=betterproto2.map_meta(
            betterproto2.TYPE_STRING, betterproto2.TYPE_STRING
        ),
    )

    mp_4_anim_asset_id: "int" = betterproto2.field(17, betterproto2.TYPE_UINT64)

    priority: "int" = betterproto2.field(18, betterproto2.TYPE_UINT64)

    max_wait_time: "int" = betterproto2.field(19, betterproto2.TYPE_UINT64)

    dress_id: "str" = betterproto2.field(20, betterproto2.TYPE_STRING)

    alignment: "int" = betterproto2.field(21, betterproto2.TYPE_UINT64)

    alignment_offset: "int" = betterproto2.field(22, betterproto2.TYPE_UINT64)


default_message_pool.register_message("douyin", "EffectConfig", EffectConfig)


@dataclass(eq=False, repr=False)
class EmojiChatMessage(betterproto2.Message):
    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    user: "User | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    emoji_id: "int" = betterproto2.field(3, betterproto2.TYPE_INT64)

    emoji_content: "Text | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )

    default_content: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    background_image: "Image | None" = betterproto2.field(
        6, betterproto2.TYPE_MESSAGE, optional=True
    )

    from_intercom: "bool" = betterproto2.field(7, betterproto2.TYPE_BOOL)

    intercom_hide_user_card: "bool" = betterproto2.field(8, betterproto2.TYPE_BOOL)


default_message_pool.register_message("douyin", "EmojiChatMessage", EmojiChatMessage)


@dataclass(eq=False, repr=False)
class EpisodeChatMessage(betterproto2.Message):
    common: "Message | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    user: "User | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    content: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    visible_to_sende: "bool" = betterproto2.field(4, betterproto2.TYPE_BOOL)

    gift_image: "Image | None" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
      BackgroundImage backgroundImage = 5;
      PublicAreaCommon publicAreaCommon = 6;
    """

    agree_msg_id: "int" = betterproto2.field(8, betterproto2.TYPE_UINT64)

    color_value_list: "list[str]" = betterproto2.field(
        9, betterproto2.TYPE_STRING, repeated=True
    )


default_message_pool.register_message(
    "douyin", "EpisodeChatMessage", EpisodeChatMessage
)


@dataclass(eq=False, repr=False)
class ExtList(betterproto2.Message):
    key: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    value: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "ExtList", ExtList)


@dataclass(eq=False, repr=False)
class FansClub(betterproto2.Message):
    data: "FansClubData | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    prefer_data: "dict[int, FansClubData]" = betterproto2.field(
        2,
        betterproto2.TYPE_MAP,
        map_meta=betterproto2.map_meta(
            betterproto2.TYPE_INT32, betterproto2.TYPE_MESSAGE
        ),
    )


default_message_pool.register_message("douyin", "FansClub", FansClub)


@dataclass(eq=False, repr=False)
class FansClubData(betterproto2.Message):
    club_name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    level: "int" = betterproto2.field(2, betterproto2.TYPE_INT32)

    user_fans_club_status: "int" = betterproto2.field(3, betterproto2.TYPE_INT32)

    badge: "UserBadge | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )

    available_gift_ids: "list[int]" = betterproto2.field(
        5, betterproto2.TYPE_INT64, repeated=True
    )

    anchor_id: "int" = betterproto2.field(6, betterproto2.TYPE_INT64)


default_message_pool.register_message("douyin", "FansClubData", FansClubData)


@dataclass(eq=False, repr=False)
class FansclubMessage(betterproto2.Message):
    """
    from https://github.com/HaoDong108/DouyinBarrageGrab/blob/main/BarrageGrab/proto/message.proto
    """

    common_info: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    type: "int" = betterproto2.field(2, betterproto2.TYPE_INT32)
    """
    升级是1，加入是2
    """

    content: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    user: "User | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("douyin", "FansclubMessage", FansclubMessage)


@dataclass(eq=False, repr=False)
class FollowInfo(betterproto2.Message):
    following_count: "int" = betterproto2.field(1, betterproto2.TYPE_UINT64)

    follower_count: "int" = betterproto2.field(2, betterproto2.TYPE_UINT64)

    follow_status: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    push_status: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    remark_name: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    follower_count_str: "str" = betterproto2.field(6, betterproto2.TYPE_STRING)

    following_count_str: "str" = betterproto2.field(7, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "FollowInfo", FollowInfo)


@dataclass(eq=False, repr=False)
class GiftImPriority(betterproto2.Message):
    queue_sizes_list: "list[int]" = betterproto2.field(
        1, betterproto2.TYPE_UINT64, repeated=True
    )

    self_queue_priority: "int" = betterproto2.field(2, betterproto2.TYPE_UINT64)

    priority: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)


default_message_pool.register_message("douyin", "GiftIMPriority", GiftImPriority)


@dataclass(eq=False, repr=False)
class GiftMessage(betterproto2.Message):
    """
    礼物消息
    """

    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    gift_id: "int" = betterproto2.field(2, betterproto2.TYPE_UINT64)

    fan_ticket_count: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    group_count: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    repeat_count: "int" = betterproto2.field(5, betterproto2.TYPE_UINT64)

    combo_count: "int" = betterproto2.field(6, betterproto2.TYPE_UINT64)

    user: "User | None" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, optional=True
    )

    to_user: "User | None" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, optional=True
    )

    repeat_end: "int" = betterproto2.field(9, betterproto2.TYPE_UINT32)

    text_effect: "TextEffect | None" = betterproto2.field(
        10, betterproto2.TYPE_MESSAGE, optional=True
    )

    group_id: "int" = betterproto2.field(11, betterproto2.TYPE_UINT64)

    income_taskgifts: "int" = betterproto2.field(12, betterproto2.TYPE_UINT64)

    room_fan_ticket_count: "int" = betterproto2.field(13, betterproto2.TYPE_UINT64)

    priority: "GiftImPriority | None" = betterproto2.field(
        14, betterproto2.TYPE_MESSAGE, optional=True
    )

    gift: "GiftStruct | None" = betterproto2.field(
        15, betterproto2.TYPE_MESSAGE, optional=True
    )

    log_id: "str" = betterproto2.field(16, betterproto2.TYPE_STRING)

    send_type: "int" = betterproto2.field(17, betterproto2.TYPE_UINT64)

    public_area_common: "PublicAreaCommon | None" = betterproto2.field(
        18, betterproto2.TYPE_MESSAGE, optional=True
    )

    tray_display_text: "Text | None" = betterproto2.field(
        19, betterproto2.TYPE_MESSAGE, optional=True
    )

    banned_display_effects: "int" = betterproto2.field(20, betterproto2.TYPE_UINT64)

    display_for_self: "bool" = betterproto2.field(25, betterproto2.TYPE_BOOL)
    """
     GiftTrayInfo trayInfo = 21;
     AssetEffectMixInfo assetEffectMixInfo = 22;
    """

    interact_gift_info: "str" = betterproto2.field(26, betterproto2.TYPE_STRING)

    diy_item_info: "str" = betterproto2.field(27, betterproto2.TYPE_STRING)

    min_asset_set_list: "list[int]" = betterproto2.field(
        28, betterproto2.TYPE_UINT64, repeated=True
    )

    total_count: "int" = betterproto2.field(29, betterproto2.TYPE_UINT64)

    client_gift_source: "int" = betterproto2.field(30, betterproto2.TYPE_UINT32)

    to_user_ids_list: "list[int]" = betterproto2.field(
        32, betterproto2.TYPE_UINT64, repeated=True
    )
    """
     AnchorGiftData anchorGift = 31;
    """

    send_time: "int" = betterproto2.field(33, betterproto2.TYPE_UINT64)

    force_display_effects: "int" = betterproto2.field(34, betterproto2.TYPE_UINT64)

    trace_id: "str" = betterproto2.field(35, betterproto2.TYPE_STRING)

    effect_display_ts: "int" = betterproto2.field(36, betterproto2.TYPE_UINT64)


default_message_pool.register_message("douyin", "GiftMessage", GiftMessage)


@dataclass(eq=False, repr=False)
class GiftStruct(betterproto2.Message):
    image: "Image | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    describe: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    notify: "bool" = betterproto2.field(3, betterproto2.TYPE_BOOL)

    duration: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    id: "int" = betterproto2.field(5, betterproto2.TYPE_UINT64)

    for_linkmic: "bool" = betterproto2.field(7, betterproto2.TYPE_BOOL)
    """
     GiftStructFansClubInfo fansclubInfo = 6;
    """

    doodle: "bool" = betterproto2.field(8, betterproto2.TYPE_BOOL)

    for_fansclub: "bool" = betterproto2.field(9, betterproto2.TYPE_BOOL)

    combo: "bool" = betterproto2.field(10, betterproto2.TYPE_BOOL)

    type: "int" = betterproto2.field(11, betterproto2.TYPE_UINT32)

    diamond_count: "int" = betterproto2.field(12, betterproto2.TYPE_UINT32)

    is_displayed_on_panel: "bool" = betterproto2.field(13, betterproto2.TYPE_BOOL)

    primary_effect_id: "int" = betterproto2.field(14, betterproto2.TYPE_UINT64)

    gift_label_icon: "Image | None" = betterproto2.field(
        15, betterproto2.TYPE_MESSAGE, optional=True
    )

    name: "str" = betterproto2.field(16, betterproto2.TYPE_STRING)

    region: "str" = betterproto2.field(17, betterproto2.TYPE_STRING)

    manual: "str" = betterproto2.field(18, betterproto2.TYPE_STRING)

    for_custom: "bool" = betterproto2.field(19, betterproto2.TYPE_BOOL)

    icon: "Image | None" = betterproto2.field(
        21, betterproto2.TYPE_MESSAGE, optional=True
    )
    """
     specialEffectsMap = 20;
    """

    action_type: "int" = betterproto2.field(22, betterproto2.TYPE_UINT32)
    """
    fixme 后面的就不写了还有几十个属性
    """


default_message_pool.register_message("douyin", "GiftStruct", GiftStruct)


@dataclass(eq=False, repr=False)
class GradeBuffInfo(betterproto2.Message):
    pass


default_message_pool.register_message("douyin", "GradeBuffInfo", GradeBuffInfo)


@dataclass(eq=False, repr=False)
class GradeIcon(betterproto2.Message):
    icon: "Image | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    icon_diamond: "int" = betterproto2.field(2, betterproto2.TYPE_INT64)

    level: "int" = betterproto2.field(3, betterproto2.TYPE_INT64)

    level_str: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "GradeIcon", GradeIcon)


@dataclass(eq=False, repr=False)
class HeadersList(betterproto2.Message):
    key: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    value: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "HeadersList", HeadersList)


@dataclass(eq=False, repr=False)
class Image(betterproto2.Message):
    url_list_list: "list[str]" = betterproto2.field(
        1, betterproto2.TYPE_STRING, repeated=True
    )

    uri: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    height: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    width: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    avg_color: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    image_type: "int" = betterproto2.field(6, betterproto2.TYPE_UINT32)

    open_web_url: "str" = betterproto2.field(7, betterproto2.TYPE_STRING)

    content: "ImageContent | None" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, optional=True
    )

    is_animated: "bool" = betterproto2.field(9, betterproto2.TYPE_BOOL)

    flex_setting_list: "NinePatchSetting | None" = betterproto2.field(
        10, betterproto2.TYPE_MESSAGE, optional=True
    )

    text_setting_list: "NinePatchSetting | None" = betterproto2.field(
        11, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("douyin", "Image", Image)


@dataclass(eq=False, repr=False)
class ImageContent(betterproto2.Message):
    name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    font_color: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    level: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    alternative_text: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "ImageContent", ImageContent)


@dataclass(eq=False, repr=False)
class Kk(betterproto2.Message):
    k: "int" = betterproto2.field(14, betterproto2.TYPE_UINT32)


default_message_pool.register_message("douyin", "kk", Kk)


@dataclass(eq=False, repr=False)
class LandscapeAreaCommon(betterproto2.Message):
    show_head: "bool" = betterproto2.field(1, betterproto2.TYPE_BOOL)

    show_nickname: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)

    show_font_color: "bool" = betterproto2.field(3, betterproto2.TYPE_BOOL)

    color_value_list: "list[str]" = betterproto2.field(
        4, betterproto2.TYPE_STRING, repeated=True
    )

    comment_type_tags_list: "list[CommentTypeTag]" = betterproto2.field(
        5, betterproto2.TYPE_ENUM, repeated=True
    )


default_message_pool.register_message(
    "douyin", "LandscapeAreaCommon", LandscapeAreaCommon
)


@dataclass(eq=False, repr=False)
class LikeMessage(betterproto2.Message):
    """
    点赞
    """

    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    count: "int" = betterproto2.field(2, betterproto2.TYPE_UINT64)

    total: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    color: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    user: "User | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True
    )

    icon: "str" = betterproto2.field(6, betterproto2.TYPE_STRING)

    double_like_detail: "DoubleLikeDetail | None" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, optional=True
    )

    display_control_info: "DisplayControlInfo | None" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, optional=True
    )

    linkmic_guest_uid: "int" = betterproto2.field(9, betterproto2.TYPE_UINT64)

    scene: "str" = betterproto2.field(10, betterproto2.TYPE_STRING)

    pico_display_info: "PicoDisplayInfo | None" = betterproto2.field(
        11, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("douyin", "LikeMessage", LikeMessage)


@dataclass(eq=False, repr=False)
class LiveShoppingMessage(betterproto2.Message):
    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    msg_type: "int" = betterproto2.field(2, betterproto2.TYPE_INT32)

    promotion_id: "int" = betterproto2.field(4, betterproto2.TYPE_INT64)


default_message_pool.register_message(
    "douyin", "LiveShoppingMessage", LiveShoppingMessage
)


@dataclass(eq=False, repr=False)
class MatchAgainstScoreMessage(betterproto2.Message):
    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    against: "Against | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    match_status: "int" = betterproto2.field(3, betterproto2.TYPE_UINT32)

    display_status: "int" = betterproto2.field(4, betterproto2.TYPE_UINT32)


default_message_pool.register_message(
    "douyin", "MatchAgainstScoreMessage", MatchAgainstScoreMessage
)


@dataclass(eq=False, repr=False)
class MemberMessage(betterproto2.Message):
    """
    成员消息
    """

    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    user: "User | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    member_count: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    operator: "User | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )

    is_set_to_admin: "bool" = betterproto2.field(5, betterproto2.TYPE_BOOL)

    is_top_user: "bool" = betterproto2.field(6, betterproto2.TYPE_BOOL)

    rank_score: "int" = betterproto2.field(7, betterproto2.TYPE_UINT64)

    top_user_no: "int" = betterproto2.field(8, betterproto2.TYPE_UINT64)

    enter_type: "int" = betterproto2.field(9, betterproto2.TYPE_UINT64)

    action: "int" = betterproto2.field(10, betterproto2.TYPE_UINT64)

    action_description: "str" = betterproto2.field(11, betterproto2.TYPE_STRING)

    user_id: "int" = betterproto2.field(12, betterproto2.TYPE_UINT64)

    effect_config: "EffectConfig | None" = betterproto2.field(
        13, betterproto2.TYPE_MESSAGE, optional=True
    )

    pop_str: "str" = betterproto2.field(14, betterproto2.TYPE_STRING)

    enter_effect_config: "EffectConfig | None" = betterproto2.field(
        15, betterproto2.TYPE_MESSAGE, optional=True
    )

    background_image: "Image | None" = betterproto2.field(
        16, betterproto2.TYPE_MESSAGE, optional=True
    )

    background_image_v_2: "Image | None" = betterproto2.field(
        17, betterproto2.TYPE_MESSAGE, optional=True
    )

    anchor_display_text: "Text | None" = betterproto2.field(
        18, betterproto2.TYPE_MESSAGE, optional=True
    )

    public_area_common: "PublicAreaCommon | None" = betterproto2.field(
        19, betterproto2.TYPE_MESSAGE, optional=True
    )

    user_enter_tip_type: "int" = betterproto2.field(20, betterproto2.TYPE_UINT64)

    anchor_enter_tip_type: "int" = betterproto2.field(21, betterproto2.TYPE_UINT64)


default_message_pool.register_message("douyin", "MemberMessage", MemberMessage)


@dataclass(eq=False, repr=False)
class Message(betterproto2.Message):
    method: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    payload: "bytes" = betterproto2.field(2, betterproto2.TYPE_BYTES)

    msg_id: "int" = betterproto2.field(3, betterproto2.TYPE_INT64)

    msg_type: "int" = betterproto2.field(4, betterproto2.TYPE_INT32)

    offset: "int" = betterproto2.field(5, betterproto2.TYPE_INT64)

    need_wrds_store: "bool" = betterproto2.field(6, betterproto2.TYPE_BOOL)

    wrds_version: "int" = betterproto2.field(7, betterproto2.TYPE_INT64)

    wrds_sub_key: "str" = betterproto2.field(8, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "Message", Message)


@dataclass(eq=False, repr=False)
class NinePatchSetting(betterproto2.Message):
    setting_list_list: "list[str]" = betterproto2.field(
        1, betterproto2.TYPE_STRING, repeated=True
    )


default_message_pool.register_message("douyin", "NinePatchSetting", NinePatchSetting)


@dataclass(eq=False, repr=False)
class PatternRef(betterproto2.Message):
    key: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    default_pattern: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "PatternRef", PatternRef)


@dataclass(eq=False, repr=False)
class PayGrade(betterproto2.Message):
    total_diamond_count: "int" = betterproto2.field(1, betterproto2.TYPE_INT64)

    diamond_icon: "Image | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    name: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    icon: "Image | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )

    next_name: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    level: "int" = betterproto2.field(6, betterproto2.TYPE_INT64)

    next_icon: "Image | None" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, optional=True
    )

    next_diamond: "int" = betterproto2.field(8, betterproto2.TYPE_INT64)

    now_diamond: "int" = betterproto2.field(9, betterproto2.TYPE_INT64)

    this_grade_min_diamond: "int" = betterproto2.field(10, betterproto2.TYPE_INT64)

    this_grade_max_diamond: "int" = betterproto2.field(11, betterproto2.TYPE_INT64)

    pay_diamond_bak: "int" = betterproto2.field(12, betterproto2.TYPE_INT64)

    grade_describe: "str" = betterproto2.field(13, betterproto2.TYPE_STRING)

    grade_icon_list: "list[GradeIcon]" = betterproto2.field(
        14, betterproto2.TYPE_MESSAGE, repeated=True
    )

    screen_chat_type: "int" = betterproto2.field(15, betterproto2.TYPE_INT64)

    im_icon: "Image | None" = betterproto2.field(
        16, betterproto2.TYPE_MESSAGE, optional=True
    )

    im_icon_with_level: "Image | None" = betterproto2.field(
        17, betterproto2.TYPE_MESSAGE, optional=True
    )

    live_icon: "Image | None" = betterproto2.field(
        18, betterproto2.TYPE_MESSAGE, optional=True
    )

    new_im_icon_with_level: "Image | None" = betterproto2.field(
        19, betterproto2.TYPE_MESSAGE, optional=True
    )

    new_live_icon: "Image | None" = betterproto2.field(
        20, betterproto2.TYPE_MESSAGE, optional=True
    )

    upgrade_need_consume: "int" = betterproto2.field(21, betterproto2.TYPE_INT64)

    next_privileges: "str" = betterproto2.field(22, betterproto2.TYPE_STRING)

    background: "Image | None" = betterproto2.field(
        23, betterproto2.TYPE_MESSAGE, optional=True
    )

    background_back: "Image | None" = betterproto2.field(
        24, betterproto2.TYPE_MESSAGE, optional=True
    )

    score: "int" = betterproto2.field(25, betterproto2.TYPE_INT64)

    buff_info: "GradeBuffInfo | None" = betterproto2.field(
        26, betterproto2.TYPE_MESSAGE, optional=True
    )

    grade_banner: "str" = betterproto2.field(1001, betterproto2.TYPE_STRING)

    profile_dialog_bg: "Image | None" = betterproto2.field(
        1002, betterproto2.TYPE_MESSAGE, optional=True
    )

    profile_dialog_bg_back: "Image | None" = betterproto2.field(
        1003, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("douyin", "PayGrade", PayGrade)


@dataclass(eq=False, repr=False)
class PicoDisplayInfo(betterproto2.Message):
    combo_sum_count: "int" = betterproto2.field(1, betterproto2.TYPE_UINT64)

    emoji: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    emoji_icon: "Image | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )

    emoji_text: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "PicoDisplayInfo", PicoDisplayInfo)


@dataclass(eq=False, repr=False)
class PreMessage(betterproto2.Message):
    cmd: "int" = betterproto2.field(1, betterproto2.TYPE_UINT32)

    sequence_id: "int" = betterproto2.field(2, betterproto2.TYPE_UINT32)

    sdk_version: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    token: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    refer: "int" = betterproto2.field(5, betterproto2.TYPE_UINT32)

    inbox_type: "int" = betterproto2.field(6, betterproto2.TYPE_UINT32)

    build_number: "str" = betterproto2.field(7, betterproto2.TYPE_STRING)

    send_message_body: "SendMessageBody | None" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, optional=True
    )

    aa: "str" = betterproto2.field(9, betterproto2.TYPE_STRING)
    """
    字段名待定
    """

    device_platform: "str" = betterproto2.field(11, betterproto2.TYPE_STRING)

    headers: "list[HeadersList]" = betterproto2.field(
        15, betterproto2.TYPE_MESSAGE, repeated=True
    )

    auth_type: "int" = betterproto2.field(18, betterproto2.TYPE_UINT32)

    biz: "str" = betterproto2.field(21, betterproto2.TYPE_STRING)

    access: "str" = betterproto2.field(22, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "PreMessage", PreMessage)


@dataclass(eq=False, repr=False)
class ProductChangeMessage(betterproto2.Message):
    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    update_timestamp: "int" = betterproto2.field(2, betterproto2.TYPE_INT64)

    update_toast: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    update_product_info_list: "list[ProductInfo]" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, repeated=True
    )

    total: "int" = betterproto2.field(5, betterproto2.TYPE_INT64)

    update_category_info_list: "list[CategoryInfo]" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, repeated=True
    )


default_message_pool.register_message(
    "douyin", "ProductChangeMessage", ProductChangeMessage
)


@dataclass(eq=False, repr=False)
class ProductInfo(betterproto2.Message):
    promotion_id: "int" = betterproto2.field(1, betterproto2.TYPE_INT64)

    index: "int" = betterproto2.field(2, betterproto2.TYPE_INT32)

    target_flash_uids_list: "list[int]" = betterproto2.field(
        3, betterproto2.TYPE_INT64, repeated=True
    )

    explain_type: "int" = betterproto2.field(4, betterproto2.TYPE_INT64)


default_message_pool.register_message("douyin", "ProductInfo", ProductInfo)


@dataclass(eq=False, repr=False)
class PublicAreaCommon(betterproto2.Message):
    user_label: "Image | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    user_consume_in_room: "int" = betterproto2.field(2, betterproto2.TYPE_UINT64)

    user_send_gift_cnt_in_room: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)


default_message_pool.register_message("douyin", "PublicAreaCommon", PublicAreaCommon)


@dataclass(eq=False, repr=False)
class PushFrame(betterproto2.Message):
    seq_id: "int" = betterproto2.field(1, betterproto2.TYPE_UINT64)

    log_id: "int" = betterproto2.field(2, betterproto2.TYPE_UINT64)

    service: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    method: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    headers_list: "list[HeadersList]" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, repeated=True
    )

    payload_encoding: "str" = betterproto2.field(6, betterproto2.TYPE_STRING)

    payload_type: "str" = betterproto2.field(7, betterproto2.TYPE_STRING)

    payload: "bytes" = betterproto2.field(8, betterproto2.TYPE_BYTES)


default_message_pool.register_message("douyin", "PushFrame", PushFrame)


@dataclass(eq=False, repr=False)
class Response(betterproto2.Message):
    messages_list: "list[Message]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )

    cursor: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    fetch_interval: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    now: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    internal_ext: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    fetch_type: "int" = betterproto2.field(6, betterproto2.TYPE_UINT32)

    route_params: "dict[str, str]" = betterproto2.field(
        7,
        betterproto2.TYPE_MAP,
        map_meta=betterproto2.map_meta(
            betterproto2.TYPE_STRING, betterproto2.TYPE_STRING
        ),
    )

    heartbeat_duration: "int" = betterproto2.field(8, betterproto2.TYPE_UINT64)

    need_ack: "bool" = betterproto2.field(9, betterproto2.TYPE_BOOL)

    push_server: "str" = betterproto2.field(10, betterproto2.TYPE_STRING)

    live_cursor: "str" = betterproto2.field(11, betterproto2.TYPE_STRING)

    history_no_more: "bool" = betterproto2.field(12, betterproto2.TYPE_BOOL)


default_message_pool.register_message("douyin", "Response", Response)


@dataclass(eq=False, repr=False)
class RoomMessage(betterproto2.Message):
    """
    from https://github.com/scx567888/live-room-watcher/blob/master/src/main/proto/douyin_hack/webcast/im/RoomMessage.proto
    """

    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    content: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    supprot_landscape: "bool" = betterproto2.field(3, betterproto2.TYPE_BOOL)

    roommessagetype: "RoomMsgTypeEnum" = betterproto2.field(
        4, betterproto2.TYPE_ENUM, default_factory=lambda: RoomMsgTypeEnum(0)
    )

    system_top_msg: "bool" = betterproto2.field(5, betterproto2.TYPE_BOOL)

    forced_guarantee: "bool" = betterproto2.field(6, betterproto2.TYPE_BOOL)

    biz_scene: "str" = betterproto2.field(20, betterproto2.TYPE_STRING)

    buried_point_map: "dict[str, str]" = betterproto2.field(
        30,
        betterproto2.TYPE_MAP,
        map_meta=betterproto2.map_meta(
            betterproto2.TYPE_STRING, betterproto2.TYPE_STRING
        ),
    )


default_message_pool.register_message("douyin", "RoomMessage", RoomMessage)


@dataclass(eq=False, repr=False)
class RoomRankMessage(betterproto2.Message):
    """
    from https://github.com/scx567888/live-room-watcher/blob/master/src/main/proto/douyin_hack/webcast/im/RoomRankMessage.proto
    直播间排行榜
    """

    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    ranks_list: "list[RoomRankMessageRoomRank]" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, repeated=True
    )


default_message_pool.register_message("douyin", "RoomRankMessage", RoomRankMessage)


@dataclass(eq=False, repr=False)
class RoomRankMessageRoomRank(betterproto2.Message):
    user: "User | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    score_str: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    profile_hidden: "bool" = betterproto2.field(3, betterproto2.TYPE_BOOL)


default_message_pool.register_message(
    "douyin", "RoomRankMessage.RoomRank", RoomRankMessageRoomRank
)


@dataclass(eq=False, repr=False)
class RoomStatsMessage(betterproto2.Message):
    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    display_short: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    display_middle: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    display_long: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    display_value: "int" = betterproto2.field(5, betterproto2.TYPE_INT64)

    display_version: "int" = betterproto2.field(6, betterproto2.TYPE_INT64)

    incremental: "bool" = betterproto2.field(7, betterproto2.TYPE_BOOL)

    is_hidden: "bool" = betterproto2.field(8, betterproto2.TYPE_BOOL)

    total: "int" = betterproto2.field(9, betterproto2.TYPE_INT64)

    display_type: "int" = betterproto2.field(10, betterproto2.TYPE_INT64)


default_message_pool.register_message("douyin", "RoomStatsMessage", RoomStatsMessage)


@dataclass(eq=False, repr=False)
class RoomStreamAdaptationMessage(betterproto2.Message):
    """
    from https://github.com/jwwsjlm/douyinLive/tree/main/protobuf/douyin.proto
    """

    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    adaptation_type: "int" = betterproto2.field(2, betterproto2.TYPE_INT32)

    adaptation_height_ratio: "float" = betterproto2.field(3, betterproto2.TYPE_FLOAT)

    adaptation_body_center_ratio: "float" = betterproto2.field(
        4, betterproto2.TYPE_FLOAT
    )


default_message_pool.register_message(
    "douyin", "RoomStreamAdaptationMessage", RoomStreamAdaptationMessage
)


@dataclass(eq=False, repr=False)
class RoomUserSeqMessage(betterproto2.Message):
    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    ranks_list: "list[RoomUserSeqMessageContributor]" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, repeated=True
    )

    total: "int" = betterproto2.field(3, betterproto2.TYPE_INT64)

    pop_str: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    seats_list: "list[RoomUserSeqMessageContributor]" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, repeated=True
    )

    popularity: "int" = betterproto2.field(6, betterproto2.TYPE_INT64)

    total_user: "int" = betterproto2.field(7, betterproto2.TYPE_INT64)

    total_user_str: "str" = betterproto2.field(8, betterproto2.TYPE_STRING)

    total_str: "str" = betterproto2.field(9, betterproto2.TYPE_STRING)

    online_user_for_anchor: "str" = betterproto2.field(10, betterproto2.TYPE_STRING)

    total_pv_for_anchor: "str" = betterproto2.field(11, betterproto2.TYPE_STRING)

    up_right_stats_str: "str" = betterproto2.field(12, betterproto2.TYPE_STRING)

    up_right_stats_str_complete: "str" = betterproto2.field(
        13, betterproto2.TYPE_STRING
    )


default_message_pool.register_message(
    "douyin", "RoomUserSeqMessage", RoomUserSeqMessage
)


@dataclass(eq=False, repr=False)
class RoomUserSeqMessageContributor(betterproto2.Message):
    score: "int" = betterproto2.field(1, betterproto2.TYPE_UINT64)

    user: "User | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    rank: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    delta: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    is_hidden: "bool" = betterproto2.field(5, betterproto2.TYPE_BOOL)

    score_description: "str" = betterproto2.field(6, betterproto2.TYPE_STRING)

    exactly_score: "str" = betterproto2.field(7, betterproto2.TYPE_STRING)


default_message_pool.register_message(
    "douyin", "RoomUserSeqMessageContributor", RoomUserSeqMessageContributor
)


@dataclass(eq=False, repr=False)
class Rsp(betterproto2.Message):
    a: "int" = betterproto2.field(1, betterproto2.TYPE_INT32)

    b: "int" = betterproto2.field(2, betterproto2.TYPE_INT32)

    c: "int" = betterproto2.field(3, betterproto2.TYPE_INT32)

    d: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    e: "int" = betterproto2.field(5, betterproto2.TYPE_INT32)

    f: "RspF | None" = betterproto2.field(6, betterproto2.TYPE_MESSAGE, optional=True)

    g: "str" = betterproto2.field(7, betterproto2.TYPE_STRING)

    h: "int" = betterproto2.field(10, betterproto2.TYPE_UINT64)

    i: "int" = betterproto2.field(11, betterproto2.TYPE_UINT64)

    j: "int" = betterproto2.field(13, betterproto2.TYPE_UINT64)


default_message_pool.register_message("douyin", "Rsp", Rsp)


@dataclass(eq=False, repr=False)
class RspF(betterproto2.Message):
    q1: "int" = betterproto2.field(1, betterproto2.TYPE_UINT64)

    q3: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    q4: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    q5: "int" = betterproto2.field(5, betterproto2.TYPE_UINT64)


default_message_pool.register_message("douyin", "Rsp.F", RspF)


@dataclass(eq=False, repr=False)
class SendMessageBody(betterproto2.Message):
    conversation_id: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    conversation_type: "int" = betterproto2.field(2, betterproto2.TYPE_UINT32)

    conversation_short_id: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    content: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    ext: "list[ExtList]" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, repeated=True
    )

    message_type: "int" = betterproto2.field(6, betterproto2.TYPE_UINT32)

    ticket: "str" = betterproto2.field(7, betterproto2.TYPE_STRING)

    client_message_id: "str" = betterproto2.field(8, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "SendMessageBody", SendMessageBody)


@dataclass(eq=False, repr=False)
class SocialMessage(betterproto2.Message):
    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    user: "User | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    share_type: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    action: "int" = betterproto2.field(4, betterproto2.TYPE_UINT64)

    share_target: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    follow_count: "int" = betterproto2.field(6, betterproto2.TYPE_UINT64)

    public_area_common: "PublicAreaCommon | None" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("douyin", "SocialMessage", SocialMessage)


@dataclass(eq=False, repr=False)
class Text(betterproto2.Message):
    key: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    default_patter: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    default_format: "TextFormat | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )

    pieces_list: "list[TextPiece]" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, repeated=True
    )


default_message_pool.register_message("douyin", "Text", Text)


@dataclass(eq=False, repr=False)
class TextEffect(betterproto2.Message):
    portrait: "TextEffectDetail | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    landscape: "TextEffectDetail | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("douyin", "TextEffect", TextEffect)


@dataclass(eq=False, repr=False)
class TextEffectDetail(betterproto2.Message):
    text: "Text | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    text_font_size: "int" = betterproto2.field(2, betterproto2.TYPE_UINT32)

    background: "Image | None" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, optional=True
    )

    start: "int" = betterproto2.field(4, betterproto2.TYPE_UINT32)

    duration: "int" = betterproto2.field(5, betterproto2.TYPE_UINT32)

    x: "int" = betterproto2.field(6, betterproto2.TYPE_UINT32)

    y: "int" = betterproto2.field(7, betterproto2.TYPE_UINT32)

    width: "int" = betterproto2.field(8, betterproto2.TYPE_UINT32)

    height: "int" = betterproto2.field(9, betterproto2.TYPE_UINT32)

    shadow_dx: "int" = betterproto2.field(10, betterproto2.TYPE_UINT32)

    shadow_dy: "int" = betterproto2.field(11, betterproto2.TYPE_UINT32)

    shadow_radius: "int" = betterproto2.field(12, betterproto2.TYPE_UINT32)

    shadow_color: "str" = betterproto2.field(13, betterproto2.TYPE_STRING)

    stroke_color: "str" = betterproto2.field(14, betterproto2.TYPE_STRING)

    stroke_width: "int" = betterproto2.field(15, betterproto2.TYPE_UINT32)


default_message_pool.register_message("douyin", "TextEffectDetail", TextEffectDetail)


@dataclass(eq=False, repr=False)
class TextFormat(betterproto2.Message):
    color: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    bold: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)

    italic: "bool" = betterproto2.field(3, betterproto2.TYPE_BOOL)

    weight: "int" = betterproto2.field(4, betterproto2.TYPE_UINT32)

    italic_angle: "int" = betterproto2.field(5, betterproto2.TYPE_UINT32)

    font_size: "int" = betterproto2.field(6, betterproto2.TYPE_UINT32)

    use_heigh_light_color: "bool" = betterproto2.field(7, betterproto2.TYPE_BOOL)

    use_remote_clor: "bool" = betterproto2.field(8, betterproto2.TYPE_BOOL)


default_message_pool.register_message("douyin", "TextFormat", TextFormat)


@dataclass(eq=False, repr=False)
class TextPiece(betterproto2.Message):
    type: "bool" = betterproto2.field(1, betterproto2.TYPE_BOOL)

    format: "TextFormat | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )

    string_value: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    user_value: "TextPieceUser | None" = betterproto2.field(
        4, betterproto2.TYPE_MESSAGE, optional=True
    )

    gift_value: "TextPieceGift | None" = betterproto2.field(
        5, betterproto2.TYPE_MESSAGE, optional=True
    )

    heart_value: "TextPieceHeart | None" = betterproto2.field(
        6, betterproto2.TYPE_MESSAGE, optional=True
    )

    pattern_ref_value: "TextPiecePatternRef | None" = betterproto2.field(
        7, betterproto2.TYPE_MESSAGE, optional=True
    )

    image_value: "TextPieceImage | None" = betterproto2.field(
        8, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("douyin", "TextPiece", TextPiece)


@dataclass(eq=False, repr=False)
class TextPieceGift(betterproto2.Message):
    gift_id: "int" = betterproto2.field(1, betterproto2.TYPE_UINT64)

    name_ref: "PatternRef | None" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, optional=True
    )


default_message_pool.register_message("douyin", "TextPieceGift", TextPieceGift)


@dataclass(eq=False, repr=False)
class TextPieceHeart(betterproto2.Message):
    color: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "TextPieceHeart", TextPieceHeart)


@dataclass(eq=False, repr=False)
class TextPieceImage(betterproto2.Message):
    image: "Image | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    scaling_rate: "float" = betterproto2.field(2, betterproto2.TYPE_FLOAT)


default_message_pool.register_message("douyin", "TextPieceImage", TextPieceImage)


@dataclass(eq=False, repr=False)
class TextPiecePatternRef(betterproto2.Message):
    key: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    default_pattern: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)


default_message_pool.register_message(
    "douyin", "TextPiecePatternRef", TextPiecePatternRef
)


@dataclass(eq=False, repr=False)
class TextPieceUser(betterproto2.Message):
    user: "User | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    with_colon: "bool" = betterproto2.field(2, betterproto2.TYPE_BOOL)


default_message_pool.register_message("douyin", "TextPieceUser", TextPieceUser)


@dataclass(eq=False, repr=False)
class UpdateFanTicketMessage(betterproto2.Message):
    common: "Common | None" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, optional=True
    )

    room_fan_ticket_count_text: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    room_fan_ticket_count: "int" = betterproto2.field(3, betterproto2.TYPE_UINT64)

    force_update: "bool" = betterproto2.field(4, betterproto2.TYPE_BOOL)


default_message_pool.register_message(
    "douyin", "UpdateFanTicketMessage", UpdateFanTicketMessage
)


@dataclass(eq=False, repr=False)
class User(betterproto2.Message):
    id: "int" = betterproto2.field(1, betterproto2.TYPE_UINT64)

    short_id: "int" = betterproto2.field(2, betterproto2.TYPE_UINT64)

    nick_name: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    gender: "int" = betterproto2.field(4, betterproto2.TYPE_UINT32)

    signature: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    level: "int" = betterproto2.field(6, betterproto2.TYPE_UINT32)

    birthday: "int" = betterproto2.field(7, betterproto2.TYPE_UINT64)

    telephone: "str" = betterproto2.field(8, betterproto2.TYPE_STRING)

    avatar_thumb: "Image | None" = betterproto2.field(
        9, betterproto2.TYPE_MESSAGE, optional=True
    )

    avatar_medium: "Image | None" = betterproto2.field(
        10, betterproto2.TYPE_MESSAGE, optional=True
    )

    avatar_large: "Image | None" = betterproto2.field(
        11, betterproto2.TYPE_MESSAGE, optional=True
    )

    verified: "bool" = betterproto2.field(12, betterproto2.TYPE_BOOL)

    experience: "int" = betterproto2.field(13, betterproto2.TYPE_UINT32)

    city: "str" = betterproto2.field(14, betterproto2.TYPE_STRING)

    status: "int" = betterproto2.field(15, betterproto2.TYPE_INT32)

    create_time: "int" = betterproto2.field(16, betterproto2.TYPE_UINT64)

    modify_time: "int" = betterproto2.field(17, betterproto2.TYPE_UINT64)

    secret: "int" = betterproto2.field(18, betterproto2.TYPE_UINT32)

    share_qrcode_uri: "str" = betterproto2.field(19, betterproto2.TYPE_STRING)

    income_share_percent: "int" = betterproto2.field(20, betterproto2.TYPE_UINT32)

    badge_image_list: "list[Image]" = betterproto2.field(
        21, betterproto2.TYPE_MESSAGE, repeated=True
    )

    follow_info: "FollowInfo | None" = betterproto2.field(
        22, betterproto2.TYPE_MESSAGE, optional=True
    )

    pay_grade: "PayGrade | None" = betterproto2.field(
        23, betterproto2.TYPE_MESSAGE, optional=True
    )

    fans_club: "FansClub | None" = betterproto2.field(
        24, betterproto2.TYPE_MESSAGE, optional=True
    )

    special_id: "str" = betterproto2.field(26, betterproto2.TYPE_STRING)
    """
     Border Border = 25;
    """

    avatar_border: "Image | None" = betterproto2.field(
        27, betterproto2.TYPE_MESSAGE, optional=True
    )

    medal: "Image | None" = betterproto2.field(
        28, betterproto2.TYPE_MESSAGE, optional=True
    )

    real_time_icons_list: "list[Image]" = betterproto2.field(
        29, betterproto2.TYPE_MESSAGE, repeated=True
    )

    display_id: "str" = betterproto2.field(38, betterproto2.TYPE_STRING)

    sec_uid: "str" = betterproto2.field(46, betterproto2.TYPE_STRING)

    fan_ticket_count: "int" = betterproto2.field(1022, betterproto2.TYPE_UINT64)

    id_str: "str" = betterproto2.field(1028, betterproto2.TYPE_STRING)

    age_range: "int" = betterproto2.field(1045, betterproto2.TYPE_UINT32)


default_message_pool.register_message("douyin", "User", User)


@dataclass(eq=False, repr=False)
class UserBadge(betterproto2.Message):
    icons: "dict[int, Image]" = betterproto2.field(
        1,
        betterproto2.TYPE_MAP,
        map_meta=betterproto2.map_meta(
            betterproto2.TYPE_INT32, betterproto2.TYPE_MESSAGE
        ),
    )

    title: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)


default_message_pool.register_message("douyin", "UserBadge", UserBadge)
