refactor(build): 重构构建系统并修复并发错误

本次提交对项目的构建和部署流程进行了全面重构，并修复了多个底层存在的异步和线程相关的严重错误，显著提升了应用的稳定性和可维护性。

### 主要重构内容

- **统一构建系统**:
  - 废弃了原有的、基于 `py2app` 和多个 `setup.py` 脚本的分散式构建方法。
  - 引入了 `VSingerBoard.spec` 作为 PyInstaller 的核心配置文件，统一管理所有平台的打包逻辑，包括数据文件（`wwwroot`）、隐藏的库、图标和元数据。

- **自动化CI/CD流程**:
  - 重写了 `.github/workflows/python-publish.yml` 工作流程。
  - 新流程现在能够完全自动化地在 Windows, macOS, 和 Linux 上进行跨平台构建，并使用新的 `.spec` 文件打包。
  - 构建成功后，会将各平台的应用程序压缩包自动上传到 GitHub Release，实现了完整的“构建-发布”流程。

### Bug修复

- **修复异步事件循环冲突**:
  - 彻底解决了 `Db`, `Bili`, 和 `Douyin` 类中因事件循环管理不当导致的 `RuntimeError`（"no running event loop" 或 "event loop is already running"）。通过在后台线程中使用正确的 `asyncio.run` 模式，确保了异步任务的稳定执行。

- **修复线程初始化错误**:
  - 修正了 `start_dy` 函数中一个导致抖音客户端线程无法启动的严重 Bug。

- **修复构建脚本错误**:
  - 解决了直接运行 `setup.py` 时因未提供命令而导致的 `error: no commands supplied` 错误。

- **资源生成**:
  - 为 Windows 平台生成了 `logo.ico` 图标文件。

